{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\feder\\\\OneDrive\\\\Documentos\\\\GitHub\\\\recetas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { Button, Grid, Paper, Box, Typography, Container } from \"@mui/material\";\nimport { fetchData } from \"./Gemini\";\nimport \"./styles.css\";\nimport { useState, useRef } from \"react\";\nimport Campo from \"./Campo\";\nimport ComponenteIA from \"./ComponenteIA\";\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputs, setInputs] = useState([]);\n  const [id, setId] = useState(1);\n  const [showCard, setShowCard] = useState(false);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const camposRefs = useRef([]);\n  const handleAddInput = () => {\n    setInputs([...inputs, {\n      id\n    }]);\n    camposRefs.current.push( /*#__PURE__*/React.createRef());\n    setId(id + 1);\n  };\n  const deleteAll = () => {\n    setInputs([]);\n    camposRefs.current = [];\n    setId(1);\n  };\n  const handleRemoveCampo = idToRemove => {\n    setInputs(inputs.filter((input, index) => {\n      if (input.id !== idToRemove) return true;\n      camposRefs.current.splice(index, 1);\n      return false;\n    }));\n  };\n  const handleBuscar = async () => {\n    const valores = camposRefs.current.map(ref => ref.current.getValues());\n    const filteredValores = JSON.stringify(valores.filter(valor => valor.ingrediente && valor.cantidad));\n    const generatedPrompt = `Necesito que para esta lista ${filteredValores}, me digas alguna receta que pueda cocinar. No importa si es una respuesta larga, explayate lo que sea necesario, pero necesito que la respuesta sea solo el texto de la receta, ya que la voy a usar para mostrarla en mi pagina web. Intenta darle un formato a la respuesta, no agregues caracteres especiales porque no quedan bien formateados.`;\n    const response = await fetchData({\n      prompt: generatedPrompt\n    });\n    setAiResponse(response);\n    setShowCard(true);\n  };\n  const style = {\n    background: \"linear-gradient(to right, #ff7e5f, #feb47b)\",\n    height: \"100vh\",\n    margin: 0\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"flex-start\",\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: \"Recetapp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Usa esta app para buscar una receta que te permita cocinar con lo que tengas a mano en tu casa. Solamente tenes que agregar los ingredientes que quieras y usando Gemini, la IA de Google, obtendras una receta, asi de sencillo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              margin: \"0.5rem\",\n              backgroundColor: \"primary.main\",\n              color: \"white\",\n              \":hover\": {\n                backgroundColor: \"primary.dark\"\n              }\n            },\n            size: \"small\",\n            variant: \"outlined\",\n            onClick: handleAddInput,\n            children: \"Nuevo Ingrediente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              margin: \"0.5rem\",\n              backgroundColor: \"primary.main\",\n              color: \"white\",\n              \":hover\": {\n                backgroundColor: \"primary.dark\"\n              }\n            },\n            size: \"small\",\n            variant: \"outlined\",\n            onClick: deleteAll,\n            children: \"Limpiar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(Campo, {\n            id: input.id,\n            ref: camposRefs.current[index],\n            onRemove: handleRemoveCampo\n          }, input.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            margin: \"0.5rem\",\n            backgroundColor: \"primary.main\",\n            color: \"white\",\n            \":hover\": {\n              backgroundColor: \"primary.dark\"\n            }\n          },\n          variant: \"outlined\",\n          onClick: handleBuscar,\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"20px\"\n          },\n          children: showCard && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 5,\n            style: {\n              padding: \"20px\",\n              maxWidth: \"400px\",\n              margin: \"auto\"\n            },\n            children: aiResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2MVJhdeVjouafun2rb7mVEmwF9I=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","Grid","Paper","Box","Typography","Container","fetchData","useState","useRef","Campo","ComponenteIA","jsxDEV","_jsxDEV","App","_s","inputs","setInputs","id","setId","showCard","setShowCard","aiResponse","setAiResponse","camposRefs","handleAddInput","current","push","createRef","deleteAll","handleRemoveCampo","idToRemove","filter","input","index","splice","handleBuscar","valores","map","ref","getValues","filteredValores","JSON","stringify","valor","ingrediente","cantidad","generatedPrompt","response","prompt","style","background","height","margin","container","direction","alignItems","children","maxWidth","variant","fileName","_jsxFileName","lineNumber","columnNumber","spacing","item","xs","sx","marginBottom","backgroundColor","color","size","onClick","onRemove","padding","elevation","_c","$RefreshReg$"],"sources":["C:/Users/feder/OneDrive/Documentos/GitHub/recetas/src/App.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Button,\n  Grid,\n  Paper,\n  Box,\n  Typography,\n  Container,\n} from \"@mui/material\";\nimport {fetchData} from \"./Gemini\";\nimport \"./styles.css\";\nimport { useState, useRef } from \"react\";\nimport Campo from \"./Campo\";\nimport ComponenteIA from \"./ComponenteIA\";\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nexport default function App() {\n  const [inputs, setInputs] = useState([]);\n  const [id, setId] = useState(1);\n  const [showCard, setShowCard] = useState(false);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const camposRefs = useRef([]);\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { id }]);\n    camposRefs.current.push(React.createRef());\n    setId(id + 1);\n  };\n\n  const deleteAll = () => {\n    setInputs([]);\n    camposRefs.current = [];\n    setId(1);\n  };\n\n  const handleRemoveCampo = (idToRemove) => {\n    setInputs(\n      inputs.filter((input, index) => {\n        if (input.id !== idToRemove) return true;\n        camposRefs.current.splice(index, 1);\n        return false;\n      })\n    );\n  };\n\n  const handleBuscar = async () => {\n    const valores = camposRefs.current.map((ref) => ref.current.getValues());\n    const filteredValores = JSON.stringify(\n      valores.filter((valor) => valor.ingrediente && valor.cantidad)\n    );\n    const generatedPrompt = `Necesito que para esta lista ${filteredValores}, me digas alguna receta que pueda cocinar. No importa si es una respuesta larga, explayate lo que sea necesario, pero necesito que la respuesta sea solo el texto de la receta, ya que la voy a usar para mostrarla en mi pagina web. Intenta darle un formato a la respuesta, no agregues caracteres especiales porque no quedan bien formateados.`;\n    const response = await fetchData({ prompt: generatedPrompt });\n\n    setAiResponse(response);\n    setShowCard(true); \n  };\n\n  const style = {\n    background: \"linear-gradient(to right, #ff7e5f, #feb47b)\",\n    height: \"100vh\",\n    margin: 0,\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"flex-start\"\n      style={style}\n    >\n      <Container maxWidth=\"xl\">\n      <Typography variant=\"h2\">\n        Recetapp\n      </Typography>\n      <Typography variant=\"h6\">\n        Usa esta app para buscar una receta que te permita cocinar con lo que tengas a mano en tu casa.\n        Solamente tenes que agregar los ingredientes que quieras y usando Gemini, la IA de Google, obtendras una receta, asi de sencillo.\n      </Typography>\n      </Container>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Box sx={{ marginBottom: \"1rem\" }}>\n            <Button\n              sx={{\n                margin: \"0.5rem\",\n                backgroundColor: \"primary.main\",\n                color: \"white\",\n                \":hover\": { backgroundColor: \"primary.dark\" },\n              }}\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={handleAddInput}\n            >\n              Nuevo Ingrediente\n            </Button>\n            <Button\n              sx={{\n                margin: \"0.5rem\",\n                backgroundColor: \"primary.main\",\n                color: \"white\",\n                \":hover\": { backgroundColor: \"primary.dark\" },\n              }}\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={deleteAll}\n            >\n              Limpiar\n            </Button>\n          </Box>\n          <div>\n            {inputs.map((input, index) => (\n              <Campo\n                key={input.id}\n                id={input.id}\n                ref={camposRefs.current[index]}\n                onRemove={handleRemoveCampo}\n              />\n            ))}\n          </div>\n          <Button\n            sx={{\n              margin: \"0.5rem\",\n              backgroundColor: \"primary.main\",\n              color: \"white\",\n              \":hover\": { backgroundColor: \"primary.dark\" },\n            }}\n            variant=\"outlined\"\n            onClick={handleBuscar}\n          >\n            Buscar\n          </Button>\n        </Grid>\n        <Grid item xs={8}>\n          <div style={{ padding: \"20px\" }}>\n            {showCard && (\n              <Paper\n                elevation={5}\n                style={{ padding: \"20px\", maxWidth: \"400px\", margin: \"auto\" }}\n              >\n                {aiResponse}\n              </Paper>\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}